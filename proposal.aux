\relax 
\providecommand{\transparent@use}[1]{}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Remy designs congestion-control schemes automatically to achieve desired outcomes. The algorithms it produces may replace the congestion-control module of a TCP implementation, and fit into a network library or kernel module that implements congestion control (DCCP, SCTP, the congestion manager, application-layer transmission control libraries, ns-2 modules, etc.).}}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Results for each of the schemes over a 15\nobreakspace  {}Mbps dumbbell topology with n=8 senders, each alternating between flows of exponentially-distributed byte length (mean 100 kilobytes) and exponentially-distributed off time (mean 0.5\nobreakspace  {}s). Medians and 1-$\sigma $ ellipses are shown. The blue line represents the efficient frontier, which here is defined entirely by the RemyCCs.}}{4}}
\newlabel{f:remy-fig4}{{2}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces How helpful is prior information about the network? Here we show the performance of two end-to-end RemyCCs that were designed with different prior information about the network, compared with an in-network algorithm (Cubic-over-sfqCoDel), as the link speed varies. Despite running only at the sender, the RemyCCs each outperform Cubic-over-sfqCoDel over almost their entire design ranges. But when a RemyCC's assumptions aren't met, performance deteriorates. The extent to which there is a tradeoff between the ``operating range'' and performance of a RemyCC is so far unresolved.}}{5}}
\newlabel{f:remy-spec}{{3}{5}}
\transparent@use{.75294}
\transparent@use{.75294}
\transparent@use{.75294}
\transparent@use{.75294}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Skype and Sprout on the Verizon LTE downlink trace. For Skype, overshoots in throughput lead to large standing queues. Sprout has an explicit objective: send as much as possible, but keep each packet's delay less than 100\nobreakspace  {}ms with 95\% probability.}}{7}}
\newlabel{fig:skypevssprout}{{4}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces In 40 hours of user-submitted sessions, Mosh successfully predicted and displayed 70\% of user keystrokes immediately. The error rate was less than 1\%.}}{9}}
\newlabel{f:moshcdfs}{{5}{9}}
